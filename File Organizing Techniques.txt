#include<stdio.h>
#include<string.h>
#include<stdlib.h>
struct node
{
	char n[20];
	struct node *c1;
	struct node *c2;
	struct node *c3;
}*START=NULL,*newnode,*p,*pre;
void searchD(struct node *ptr,char name[20])
{
	if(strcmp(ptr->n,name)!=0)
	{
		if(ptr->c1!=NULL)
			searchD(ptr->c1,name);
		if(ptr->c2!=NULL)
			searchD(ptr->c2,name);
		if(ptr->c3!=NULL)
			searchD(ptr->c3,name);
	}
	else
		pre=ptr;
}
void searchF(struct node *ptr,char name[20],struct node *pa)
{
	if(strcmp(ptr->n,name)!=0)
	{
		if(ptr->c1!=NULL)
			searchF(ptr->c1,name,ptr);
		if(ptr->c2!=NULL)
			searchF(ptr->c2,name,ptr);
		if(ptr->c3!=NULL)
			searchF(ptr->c3,name,ptr);
	}
	else
	{
		pre=pa;
		p=ptr;
	}
}
void display(struct node *ptr)
{
	if(ptr!=NULL)
	{
		printf("%s\t",ptr->n);
		display(ptr->c1);
		display(ptr->c2);
		display(ptr->c3);
	}		
}	
void main()
{
    	int choice,j,ch,i,flag,k,pos;
    	char temp[20],nam[20];
    	printf("\nNANDAKISHORE---RET19CS151---ROLL NUMBER - 07");
    	do
    	{
    		printf("\n\n\n\t\t\t\t1.SINGLE LEVEL\n\t\t\t\t2.TWO LEVEL DIRECTORY\n\t\t\t\t3.HIERARCHICAL\n\t\t\t\t4.EXIT\n");
    		printf("\tEnter your choice :");
        	scanf("%d",&choice);
        	switch(choice)
        	{
            	case 1: printf("\n\tEnter the name of directory : ");
		                int single=0;
		                char fileS[20][20],sdir[20];
		                scanf("%s",sdir);
		                do
                    	{
                        	printf("\n\n\t\t\t1.CREATE FILE\n\t\t\t2.DELETE FILE\n\t\t\t3.SEARCH FILE\n\t\t\t4.DISPLAY\n\t\t\t5.EXIT\n");
                        	printf("\tEnter your choice :");
                        	scanf("%d",&ch);
                        	switch(ch)
                        	{
		                    	case 1: printf("\n\tEnter file name : ");
		                            	scanf("%s",temp);
						                flag=0;
						                for(i=0;i<single;i++)
							                if(strcmp(fileS[i],temp)==0)
								                flag=1;
						                if(flag==1)
							                printf("\tFile with the same name already exists!");
						                else
						                {
							                strcpy(fileS[single],temp);
		                            		single++;
						                }
		                            	break;
		                    	case 2: printf("\n\tEnter file name : ");
		                            	scanf("%s",temp);
		                            	flag=0;
		                            	for(i=0;i<single;i++)
		                               	if(strcmp(temp,fileS[i])==0)
		                                {
		                                    flag=1;
		                                    break;
		                                }
		                            	if(flag==0)
		                                printf("\n\tFile not found!");
		                            	else
		                            	{
		                                	printf("\n\tFile deleted!");
		                                    for(j=i;j<single;j++)
		                                        	strcpy(fileS[j],fileS[j+1]);
		                                	single--;
							                printf("\n\tFiles present in %s : ",sdir);
							                for(i=0;i<single;i++)
			                                	printf("%s\t",fileS[i]);
		                            	}
					    	            break;
		                    	case 3: printf("\n\tEnter file name : ");
		                            	scanf("%s",temp);
		                            	flag=0;
		                            	for(i=0;i<single;i++)
		                                	if(strcmp(temp,fileS[i])==0)
		                                	{	
		                                    	flag=1;
		                                    	break;
		                                	}
		                            	if(flag==0)
		                                	printf("\n\tFile not found!");
		                            	else
		                                	printf("\tFile found!");
		                            	break;
		                    	case 4: printf("\n\tFiles present in %s : ",sdir);
		                            	for(i=0;i<single;i++)
		                                	printf("%s\t",fileS[i]);
		                            	break;
					            case 5:break;
		                    	default:printf("\n\tInvalid choice!");
                        	}
			            }while(ch!=5);
                	    break;
            	case 2: printf("\n\tEnter the name of root directory : ");
                    	int two=0,count[5]={0,0,0,0,0};
                    	flag=0;
                    	char fileT[20][20][20],dir[20][20];
                    	scanf("%s",sdir);
                    	do
                    	{
                        	printf("\n\n\t\t\t1.CREATE DIRECTORY\n\t\t\t2.CREATE FILE\n\t\t\t3.DELETE FILE\n\t\t\t4.SEARCH FILE\n\t\t\t5.DISPLAY\n\t\t\t6.EXIT\n");
                        	printf("\tEnter your choice : ");
                        	scanf("%d",&ch);
                        	switch(ch)
                        	{
                            		case 1: printf("\n\tEnter directory name : ");
                                    		scanf("%s",dir[two]);
                                    		two++;
                                    		break;
                            		case 2: printf("\n\tEnter parent directory name : ");
                                    		scanf("%s",temp);
                                    		flag=0;
                                    		for(i=0;i<two;i++)
				                                if(strcmp(temp,dir[i])==0)
				                                {
				                                    flag=1;
				                                    pos=i;
				                                    break;
				                                }
				                            if(flag==0)
				                	        printf("\tWrong directory!");
				                            else
				                            {
				                	            printf("\tEnter file name : ");
				                                scanf("%s",fileT[pos][count[pos]]);
				                                count[pos]++;
						                    }
				                            break;
                            		case 3: printf("\n\tEnter file name : ");
                                    		scanf("%s",temp);
                                    		flag=0;
				                            for(i=0;i<two;i++)
						                        for(j=0;j<count[i];j++)
								                    if(strcmp(temp,fileT[i][j])==0)
								                    {
				                               		    flag=1;
				                                	    pos=i;
				                                	    break;
				                           	        }
				                            if(flag==0)
				                	            printf("\n\tFile not found!");
				                            else
                                    		{
                                                printf("\n\tFile deleted!");
                                        		for(k=j;k<count[pos];k++)
                                            			strcpy(fileT[pos][k],fileT[pos][k+1]);
                                        		count[i]--;
                                        		printf("\tFiles present in %s : ",dir[pos]);
                                        		for(j=0;j<=count[pos];j++)
                                            		printf("%s\t",fileT[pos][j]);
                                    		}
                                            break;
                            		case 4: printf("\n\tEnter file name : ");
                                    		scanf("%s",temp);
                                    		flag=0;
                                    		for(i=0;i<two;i++)
                                        		for(j=0;j<count[i];j++)
                                            			if(strcmp(temp,fileT[i][j])==0)
                                            			{
						                                    flag=1;
						                                    pos=i;
						                                    break;
                                            			}
                                    		if(flag==0)
                                        		printf("\n\tFile not found!");
                                    		else
                                        		printf("\n\tFile found in %s!",dir[pos]);
                                   		    break;
                            		case 5: printf("Root directory : %s",sdir);
						                    for(i=0;i<two;i++)
                                    		{
                                        		printf("\n\t%s : ",dir[i]);
                                        		for(j=0;j<count[i];j++)
                                            			printf("%s\t",fileT[i][j]);
                                        	}
                                    		break;
                            		case 6: break;
                            		default: printf("\n\tInvalid choice...");
                        	}
                    	}while(ch!=6);
                    	break;
            	case 3: printf("\n\tEnter the name of root directory : ");
                    	scanf("%s",temp);
		    	        newnode=(struct node *)malloc(sizeof(struct node));
			            strcpy(newnode->n,temp);
			            newnode->c1=NULL;
			            newnode->c2=NULL;
			            newnode->c3=NULL;
			            START=newnode;
                    	do
                    	{	
                        	printf("\n\n\t\t\t1.CREATE DIRECTORY\n\t\t\t2.CREATE FILE\n\t\t\t3.DELETE FILE\n\t\t\t4.SEARCH FILE\n\t\t\t5.DISPLAY\n\t\t\t6.EXIT\n");
                        	printf("\tEnter your choice : ");
                            scanf("%d",&ch);
                            switch(ch)
                            {
                            	case 1: printf("\n\tEnter parent directory : ");
					                    scanf("%s",temp);
					                    pre=NULL;
					                    searchD(START,temp);
					                    if(pre==NULL)
						                    printf("\n\tNo such directory exists!");
					                    else			
					                    {
						                    newnode=(struct node *)malloc(sizeof(struct node));
						                    printf("\n\tEnter directory name : ");
		                            	    scanf("%s",nam);
						                    strcpy(newnode->n,nam);
						                    newnode->c1=NULL;
						                    newnode->c2=NULL;
						                    newnode->c3=NULL;
						                    if(pre->c1==NULL)
							                    pre->c1=newnode;
						                    else if(pre->c2==NULL)
							                    pre->c2=newnode;
						                    else
							                    pre->c3=newnode;
					                    }
					                    break;
                            	case 2: printf("\n\tEnter parent directory : ");
					                    scanf("%s",temp);
				                    	pre=NULL;
					                    searchD(START,temp);
					                    if(pre==NULL)
						                    printf("\n\tNo such directory exists!");
					                    else			
					                    {
						                    newnode=(struct node *)malloc(sizeof(struct node));
						                    newnode->c1=NULL;
						                    newnode->c2=NULL;
						                    newnode->c3=NULL;
						                    printf("\n\tEnter file name : ");
		                            	    scanf("%s",temp);
						                    strcpy(newnode->n,temp);
						                    if(pre->c1==NULL)
							                    pre->c1=newnode;
						                    else if(pre->c2==NULL)
							                    pre->c2=newnode;
						                    else
							                    pre->c3=newnode;
					                    }
                                        break;
                          	    case 3: printf("\n\tEnter file name : ");
                                    	scanf("%s",temp);
                                    	p=NULL;
					                    pre=NULL;
					                    searchF(START,temp,NULL);
				                    	if(p==NULL)
                                    		printf("\n\tFile not found!");
                                    	else
                                    	{
		                                    printf("\n\tFile deleted!");
		                                    if(pre->c1==p)
							                    pre->c1=NULL;
						                    else if(pre->c2==p)
							                    pre->c2=NULL;
						                    else
						                    	pre->c3=NULL;
                                    	}
                                   	    break;
                            	case 4: printf("\n\tEnter file name : ");
                                    	scanf("%s",temp);
                                    	p=NULL;
					                    pre=NULL;
					                    searchF(START,temp,NULL);
					                    if(p==NULL)
                                    		printf("\n\tFile not found!");
                                    	else
                                    	{
		                                    printf("\tFile found in %s!",pre->n);
		                                }
                                    	break;
                                case 5: display(START);
                                        break;
                                case 6:break;
                                default:printf("\tInvalid choice...");
                            }
                        }while(ch!=6);
                        break;
                case 4: break;
                default:printf("\tInvalid choice....");
            }
        }while(choice!=4);
}
