#include <stdio.h>
int rear,front,max,q[100],cq[100];
void queue();
void cqueue();
void queueinsert();
void queuedelete();
void queuedisplay();
void cqueueinsert();
void cqueuedelete();
void cqueuedisplay();
void main()
{
    int sel;
    printf("\n\n\t1.Queue     2.Circular Queue   3.Exit  :");
    scanf("%d",&sel);
    while(sel!=3)
    {
        if(sel==1)
        {
            queue();
        }
        else if(sel==2)
        {
            cqueue();
        }
        else
        {
            printf("\n\tInvalid Choice...");
        }
        printf("\n\n\t1.Queue     2.Circular Queue     3.Exit  :");
        scanf("%d",&sel);
    }
}
void queue()
{
    int sel;
    front=rear=-1;
    printf("\n\n\tEnter the maximum size of queue :");
    scanf("%d",&max);
    printf("\n\t1.Insert   2.Delete    3.Isempty   4.Isfull   5.Display   6.Exit  :");
    scanf("%d",&sel);
    while(sel!=6)
    {
        if(sel==1)
        {
            queueinsert();
        }
        else if(sel==2)
        {
            queuedelete();
        }
        else if(sel==3)
        {
            if(front==-1)
            {
                printf("\n\tThe queue is empty....");
            }
            else
            {
                printf("\n\tThe queue is not empty....");
            }
        }
        else if(sel==4)
        {
            if(rear!=max-1)
            {
                printf("\n\tThe queue is not full...");
            }
            else
            {
                printf("\n\tThe queue is full...");
            }
        }
        else if(sel==5)
        {
            queuedisplay();
        }
        else
        {
            printf("\n\tInvalid choice....");
        }
        printf("\n\n\t1.Insert   2.Delete    3.Isempty   4.Isfull   5.Display   6.Exit  :");
        scanf("%d",&sel);
    }
    printf("\n\n***********************************************************************************\n\n");
}
void queueinsert()
{
    int data;
    if(rear==max-1)
    {
        printf("\n\tThe queue is full...");
    }
    else
    {
        printf("\n\tEnter the data to be inserted : ");
        scanf("%d",&data);
        q[++rear]=data;
        if(front==-1)
        {
            front=0;
        }
        queuedisplay();
    }
}
void queuedelete()
{
    if(front==-1)
    {
        printf("\n\tThe queue is empty...");
    }
    else
    {
        if(front==rear)
        {
            front=rear=-1;
            printf("\n\tSuccssfully deleted the element..Queue is empty now..no more elements to be deleted...");
        }
        else
        {
            front++;
            queuedisplay();
        }
    }
}
void queuedisplay()
{
    int i;
    if(front==-1)
    {
        printf("\n\tThe queue is empty....");
    }
    printf("\n\tThe queue is  :  ");
    for(i=front;i<=rear;i++)
    {
        printf("%d  ",q[i]);
    }
}
void cqueue()
{
    int sel;
    front=rear=-1;
    printf("\n\n\tEnter the maximum size of circular queue :");
    scanf("%d",&max);
    printf("\n\t1.Insert   2.Delete    3.Isempty   4.Isfull   5.Display   6.Exit  :");
    scanf("%d",&sel);
    while(sel!=6)
    {
        if(sel==1)
        {
            cqueueinsert();
        }
        else if(sel==2)
        {
            cqueuedelete();
        }
        else if(sel==3)
        {
            if(front==-1)
            {
                printf("\n\tThe circular queue is empty....");
            }
            else
            {
                printf("\n\tThe circular queue is not empty....");
            }
        }
        else if(sel==4)
        {
            if((rear==max-1 && front==0) || (front==rear+1))
            {
                printf("\n\tThe circular queue is full...");
            }
            else
            {
                printf("\n\tThe circular queue is not full...");
            }
        }
        else if(sel==5)
        {
            cqueuedisplay();
        }
        else
        {
            printf("\n\tInvalid choice....");
        }
        printf("\n\n\t1.Insert   2.Delete    3.Isempty   4.Isfull   5.Display   6.Exit  :");
        scanf("%d",&sel);
    }
    printf("\n\n***********************************************************************************\n\n");
}
void cqueueinsert()
{
    int data;
    if((rear==max-1 && front==0) || (front==rear+1))
    {
        printf("\n\tThe Circular queue is full...");
    }
    else
    {
        printf("\n\tEnter the data to be inserted : ");
        scanf("%d",&data);
        rear=(rear+1)%max;
        cq[rear]=data;
        if(front==-1)
        {
            front=0;
        }
        cqueuedisplay();
    }
}
void cqueuedelete()
{
    if(front==-1)
    {
        printf("\n\tThe Circular queue is empty...");
    }
    else
    {
        if(front==rear)
        {
            front=rear=-1;
            printf("\n\tSuccssfully deleted the element..Queue is empty now..no more elements to be deleted...");
        }
        else
        {
            front=(front+1)%max;
            cqueuedisplay();
        }
    }
}
void cqueuedisplay()
{
    int i;
    if(front==-1)
    {
        printf("\n\tThe queue is empty....");
    }
    printf("\n\tThe Circular queue is :  ");
    if(front<=rear)
    {
        for(i=front;i<=rear;i++)
        {
            printf("%d  ",cq[i]);
        }
    }
    else
    {
        i=front;
        while(i<max)
        {
            printf("%d  ",cq[i]);
            i++;
        }
        for(i=0;i<=rear;i++)
        {
            printf("%d  ",cq[i]);
        }
    }
}